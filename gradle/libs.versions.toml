[versions]
exposed = "0.61.0"
flyway = "11.10.1"
jackson = "2.18.3"
tbdLibs = "2025.03.10-19.50-d556269c"
testcontainers = "1.20.6"

[libraries]
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref= "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref= "exposed" }
exposed-java-time = { module = "org.jetbrains.exposed:exposed-java-time", version.ref= "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref= "exposed" }
exposed-json = { module = "org.jetbrains.exposed:exposed-json", version.ref= "exposed" }

flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
flyway-postgres = { module = "org.flywaydb:flyway-database-postgresql", version.ref = "flyway" }

hikari = "com.zaxxer:HikariCP:6.3.0"

jackson-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }
jackson-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }

kotliquery = "com.github.seratch:kotliquery:1.9.1"

logback-classic = "ch.qos.logback:logback-classic:1.5.18"
logback-logstashEncoder = "net.logstash.logback:logstash-logback-encoder:8.1"
micrometer-prometheus = "io.micrometer:micrometer-registry-prometheus:1.15.3"
postgresJdbcDriver = "org.postgresql:postgresql:42.7.7"
postgresSocketFactory = "com.google.cloud.sql:postgres-socket-factory:1.25.1"
rapidsAndRivers = "com.github.navikt:rapids-and-rivers:2025061811051750237542.df739400e55e"

tbdLibs-rapidsAndRiversTest = { module = "com.github.navikt.tbd-libs:rapids-and-rivers-test", version.ref = "tbdLibs" }

testcontainers-postgres = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }

unleash-client = "io.getunleash:unleash-client-java:11.0.1"

[bundles]
exposed = [
    "exposed-core",
    "exposed-dao",
    "exposed-java-time",
    "exposed-jdbc",
    "exposed-json"
]
flyway-postgres = [
    "flyway-core",
    "flyway-postgres"
]
jackson = [
    "jackson-jsr310",
    "jackson-kotlin",
]
logback = [
    "logback-classic",
    "logback-logstashEncoder",
]
