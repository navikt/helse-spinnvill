name: Bygg og deploy Spinnvill

on:
  push:
    paths-ignore:
      - '.idea'
      - 'spinnvill-opprydding-dev/**'
      - 'Dockerfile-opprydding-dev'
      - '.github/workflows/opprydding-dev.yml'
      - 'deploy/dev-opprydding.yml'
    branches:
      - main

permissions:
  contents: "read"
  id-token: "write"

jobs:
  build:
    name: Bygg, test og lag docker image
    runs-on: ubuntu-latest
    steps:
      - name: Sjekk ut kode
        uses: actions/checkout@v4
      - name: Sett opp Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
      - name: Sett opp Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Bygg med Gradle
        env:
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew build
      - name: Bygg docker image
        uses: nais/docker-build-push@v0
        id: docker-build-push
        env:
          TRIVY_JAVA_DB_REPOSITORY: "public.ecr.aws/aquasecurity/trivy-java-db:1" # Kan sikkert fjernes når https://github.com/aquasecurity/trivy-action/issues/389 er løst
        with:
          team: tbd
          cache_from: type=gha
          cache_to: type=gha,mode=min
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  deploy-dev:
    name: Deploy til dev
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Sjekk ut kode
        uses: actions/checkout@v4
      - name: Deploy til NAIS
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: deploy/dev.yml,deploy/dev-db-policy.yml,deploy/unleash/dev.yml
          IMAGE: ${{ needs.build.outputs.image }}

  deploy-prod:
    name: Deploy til prod
    needs: [build, deploy-dev]
    runs-on: ubuntu-latest
    steps:
      - name: Sjekk ut kode
        uses: actions/checkout@v4
      - name: Deploy til NAIS
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-gcp
          RESOURCE: deploy/prod.yml,deploy/unleash/prod.yml
          IMAGE: ${{ needs.build.outputs.image }}



